{"version":3,"sources":["components/Document/Document.js","components/App/app.style.js","components/App/App.js","index.js"],"names":["fetchEndpoints","endpoint","a","axios","method","url","endpoints","types","PdFDocument","setLoading","useState","products","setProducts","useEffect","fetchFunction","all","map","productsArray","productArray","data","flat","styles","StyleSheet","create","PageContent","display","flexDirection","width","color","LinkContainer","justifyContent","alignItems","ProductsContainer","textAlign","margin","ProductsContainerH1","textDecoration","fontSize","textTransform","ProductTitleContainer","ProductTitleContainerH2","ProductTitleContainerH3","marginRight","ProductContent","padding","style","backgroundColor","type","index","id","product","title","rendered","meta","prix","content","replace","PDFDownloadLinkStyled","styled","PDFDownloadLink","props","disabled","css","App","loading","height","document","fileName","ReactDOM","render","getElementById"],"mappings":"uVAGMA,EAAc,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sEACRC,IAAM,CACjBC,OAAQ,MACRC,IAAI,oCAAD,OAAsCJ,EAAtC,6CAHgB,mFAAH,sDAOdK,EAAY,CAChB,SACA,gBACA,mBACA,WACA,WACA,gBAGIC,EAAQ,CACZ,QACA,YACA,kBACA,YACA,WACA,YAsIaC,EApIK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACAC,qBAAU,WACRJ,GAAW,GACX,IAAMK,EAAa,uCAAG,4BAAAZ,EAAA,sEACQC,IAAMY,IAChCT,EAAUU,KAAI,SAACf,GAAD,OAAcD,EAAeC,OAFzB,OACdgB,EADc,OAIpBL,EACEK,EAAcD,KAAI,SAACE,GAAD,OAAkBA,EAAaC,QAAMC,QAEzDX,GAAW,GAPS,2CAAH,qDASnBK,MACC,IAEH,IAAMO,EAASC,aAAWC,OAAO,CAC/BC,YAAa,CACXC,QAAS,OACTC,cAAe,SACfC,MAAO,OACPC,MAAO,SAETC,cAAe,CACbJ,QAAS,OACTK,eAAgB,SAChBC,WAAY,UAEdC,kBAAmB,CACjBL,MAAO,OACPM,UAAW,OACXC,OAAQ,QAEVC,oBAAqB,CACnBC,eAAgB,YAChBC,SAAU,OACVC,cAAe,YACfL,UAAW,UAEbM,sBAAuB,CACrBd,QAAS,OACTC,cAAe,MACfI,eAAgB,gBAChBC,WAAY,UAEdS,wBAAyB,CACvBP,UAAW,OACXI,SAAU,OACVC,cAAe,aAGjBG,wBAAyB,CACvBJ,SAAU,OACVJ,UAAW,QACXS,YAAa,QAEfC,eAAgB,CACdN,SAAU,OACVV,MAAO,MACPM,UAAW,OACXW,QAAS,aAGb,OACE,cAAC,WAAD,UACE,cAAC,OAAD,CAAMC,MAAO,CAAEC,gBAAiB,WAAhC,SACE,cAAC,OAAD,CAAMD,MAAOxB,EAAOG,YAApB,SACGjB,EAAMS,KAAI,SAAC+B,EAAMC,GAAP,OACT,eAAC,OAAD,CAAkBC,GAAIF,EAAMF,MAAOxB,EAAOW,kBAA1C,UACE,cAAC,OAAD,CAAMa,MAAOxB,EAAOc,oBAApB,SACY,cAATY,EAAuB,QAAUA,IAEnCpC,EAASK,KACR,SAACkC,GAAD,OACEA,EAAO,OAAaH,GAClB,eAAC,OAAD,CAAuBF,MAAOxB,EAAOW,kBAArC,UACE,eAAC,OAAD,CAAMa,MAAOxB,EAAOkB,sBAApB,UACE,cAAC,OAAD,CAAMM,MAAOxB,EAAOmB,wBAApB,SACGU,EAAQC,MAAMC,WAEjB,eAAC,OAAD,CAAMP,MAAOxB,EAAOoB,wBAApB,UACGS,EAAQG,KAAKC,KADhB,IACsB,iDAGxB,cAAC,OAAD,CAAMT,MAAOxB,EAAOsB,eAApB,SACGO,EAAQK,QAAQH,SAASI,QAAQ,gBAAiB,QAV5CN,EAAQD,SAPhBD,a,iBClFVS,EAAwBC,YAAOC,kBAAPD,CAAH,gPAThB,SAACE,GACjB,GAAIA,EAAMC,SACR,OAAOC,YAAP,0FCgBWC,EAlBH,WACV,MAA8BrD,oBAAS,GAAvC,mBAAOsD,EAAP,KAAgBvD,EAAhB,KACA,OACE,sBAAKoC,MAAO,CAAEoB,OAAQ,SAAtB,UACE,cAACR,EAAD,CACEI,SAAUG,EACVE,SAAU,cAAC,EAAD,CAAczD,WAAYA,IACpC0D,SAAS,gBAHX,SAKGH,EAAU,UAAY,gBAEzB,cAAC,YAAD,CAAWrC,MAAM,OAAOsC,OAAO,OAA/B,SACE,cAAC,EAAD,CAAcxD,WAAYA,UCXlC2D,IAASC,OAAO,cAAC,EAAD,IAASH,SAASI,eAAe,W","file":"static/js/main.bfeea2a9.chunk.js","sourcesContent":["import { Document, Page, StyleSheet, Text, View } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nconst fetchEndpoints = async (endpoint) => {\n  return await axios({\n    method: \"GET\",\n    url: `https://le-tdo.com/wp-json/wp/v2/${endpoint}?status[]=publish&per_page=50&order=asc`,\n  });\n};\n\nconst endpoints = [\n  \"pizzas\",\n  \"les_antipasti\",\n  \"ptes_et_risottos\",\n  \"tagliate\",\n  \"la_carne\",\n  \"les_desserts\",\n];\n\nconst types = [\n  \"Pizze\",\n  \"Antipasti\",\n  \"Pasta e Risotti\",\n  \"Tagliates\",\n  \"La Carne\",\n  \"Desserts\",\n];\nconst PdFDocument = ({ setLoading }) => {\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    setLoading(true);\n    const fetchFunction = async () => {\n      const productsArray = await axios.all(\n        endpoints.map((endpoint) => fetchEndpoints(endpoint))\n      );\n      setProducts(\n        productsArray.map((productArray) => productArray.data).flat()\n      );\n      setLoading(false);\n    };\n    fetchFunction();\n  }, []);\n\n  const styles = StyleSheet.create({\n    PageContent: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      color: \"white\",\n    },\n    LinkContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    ProductsContainer: {\n      width: \"100%\",\n      textAlign: \"left\",\n      margin: \"12px\",\n    },\n    ProductsContainerH1: {\n      textDecoration: \"underline\",\n      fontSize: \"24px\",\n      textTransform: \"uppercase\",\n      textAlign: \"center\",\n    },\n    ProductTitleContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n    ProductTitleContainerH2: {\n      textAlign: \"left\",\n      fontSize: \"20px\",\n      textTransform: \"uppercase\",\n    },\n\n    ProductTitleContainerH3: {\n      fontSize: \"20px\",\n      textAlign: \"right\",\n      marginRight: \"40px\",\n    },\n    ProductContent: {\n      fontSize: \"15px\",\n      width: \"80%\",\n      textAlign: \"left\",\n      padding: \"8px 0px\",\n    },\n  });\n  return (\n    <Document>\n      <Page style={{ backgroundColor: \"#656439\" }}>\n        <View style={styles.PageContent}>\n          {types.map((type, index) => (\n            <View key={index} id={type} style={styles.ProductsContainer}>\n              <Text style={styles.ProductsContainerH1}>\n                {type === \"Tagliates\" ? \"Pesce\" : type}\n              </Text>\n              {products.map(\n                (product) =>\n                  product[\"type\"] === type && (\n                    <View key={product.id} style={styles.ProductsContainer}>\n                      <View style={styles.ProductTitleContainer}>\n                        <Text style={styles.ProductTitleContainerH2}>\n                          {product.title.rendered}\n                        </Text>\n                        <Text style={styles.ProductTitleContainerH3}>\n                          {product.meta.prix} <small>€</small>\n                        </Text>\n                      </View>\n                      <Text style={styles.ProductContent}>\n                        {product.content.rendered.replace(/(<([^>]+)>)/gi, \"\")}\n                      </Text>\n                    </View>\n                  )\n              )}\n            </View>\n          ))}\n        </View>\n        {/* <AppContainer>\n          <NavContainer>\n            <ul>\n              {types.map((type) => (\n                <li key={type}>\n                  <a href={`#${type}`}>\n                    {type === \"Tagliates\" ? \"Pesce\" : type}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </NavContainer>\n          {types.map((type, index) => (\n            <ProductsContainer key={index} id={type}>\n              <h1>{type === \"Tagliates\" ? \"Pesce\" : type}</h1>\n              {products.map(\n                (product) =>\n                  product[\"type\"] === type && (\n                    <ProductsContainer key={product.id}>\n                      <ProductTitleContainer>\n                        <h2>{product.title.rendered}</h2>\n                        <h3>\n                          {product.meta.prix} <small>€</small>\n                        </h3>\n                      </ProductTitleContainer>\n                      <p>\n                        {product.content.rendered.replace(/(<([^>]+)>)/gi, \"\")}\n                      </p>\n                    </ProductsContainer>\n                  )\n              )}\n            </ProductsContainer>\n          ))}\n        </AppContainer> */}\n      </Page>\n    </Document>\n  );\n};\n\nexport default PdFDocument;\n","import { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport styled from \"styled-components\";\nimport { css } from \"styled-components\";\n\nconst isLoading = (props) => {\n  if (props.disabled) {\n    return css`\n      background-color: grey;\n      cursor: default;\n    `;\n  }\n};\n\nexport const PDFDownloadLinkStyled = styled(PDFDownloadLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 25px auto;\n  width: 50%;\n  border: 5px solid black;\n  background-color: blue;\n  color: white;\n  text-decoration: none;\n  ${isLoading}\n`;\n","import { PDFViewer } from \"@react-pdf/renderer\";\nimport React, { useState } from \"react\";\nimport PdfDocucment from \"../Document/Document\";\nimport { PDFDownloadLinkStyled } from \"./app.style\";\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <PDFDownloadLinkStyled\n        disabled={loading}\n        document={<PdfDocucment setLoading={setLoading} />}\n        fileName=\"carte-tdo.pdf\"\n      >\n        {loading ? \"Loading\" : \"Telecharger\"}\n      </PDFDownloadLinkStyled>\n      <PDFViewer width=\"100%\" height=\"100%\">\n        <PdfDocucment setLoading={setLoading} />\n      </PDFViewer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}